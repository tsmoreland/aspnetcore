// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WiredBrainCoffee.EmployeeManager.Infrastructure;

#nullable disable

namespace WiredBrainCoffee.EmployeeManager.Infrastructure.Migrations
{
    [DbContext(typeof(EmployeeManagerDbContext))]
    [Migration("20221204002053_Concurrency")]
    partial class Concurrency
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("WiredBrainCoffee.EmployeeManager.Infrastructure.Entities.DepartmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("LastModifiedTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyToken = "160be889-f4f0-464e-a14e-6bb13686c44a",
                            LastModifiedTime = 0L,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyToken = "4e6a2a71-1dba-41b1-99c1-de4832942cff",
                            LastModifiedTime = 0L,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyToken = "e6846c79-bbcd-44bd-87ca-6bd219956bdf",
                            LastModifiedTime = 0L,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyToken = "f5aa945f-9a3c-4fc2-a2ff-7d2c2299ca69",
                            LastModifiedTime = 0L,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 5,
                            ConcurrencyToken = "fa002166-9df3-4221-94c7-27ed8df4c188",
                            LastModifiedTime = 0L,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 6,
                            ConcurrencyToken = "7a2e4c49-83fe-4f55-8340-002618c42183",
                            LastModifiedTime = 0L,
                            Name = "Research and Development"
                        });
                });

            modelBuilder.Entity("WiredBrainCoffee.EmployeeManager.Infrastructure.Entities.EmployeeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeveloper")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<long>("LastModifiedTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyToken = "2e0270ee-a83b-4cdf-ae89-8057fd68b972",
                            DepartmentId = 1,
                            FirstName = "John",
                            IsDeveloper = false,
                            LastModifiedTime = 0L,
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyToken = "8b65cdfe-d1e3-4029-83bd-25262d129ead",
                            DepartmentId = 2,
                            FirstName = "Jessica",
                            IsDeveloper = false,
                            LastModifiedTime = 0L,
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyToken = "1d4edfae-1ec1-4d32-9f21-77834035a8d6",
                            DepartmentId = 3,
                            FirstName = "Tony",
                            IsDeveloper = true,
                            LastModifiedTime = 0L,
                            LastName = "Stark"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyToken = "263cf54c-4e7a-400b-b216-4e3a4b34800d",
                            DepartmentId = 4,
                            FirstName = "Edward",
                            IsDeveloper = false,
                            LastModifiedTime = 0L,
                            LastName = "Enigma"
                        },
                        new
                        {
                            Id = 5,
                            ConcurrencyToken = "c7d62fda-e896-450f-a572-701b1d69eb67",
                            DepartmentId = 5,
                            FirstName = "Brenda",
                            IsDeveloper = false,
                            LastModifiedTime = 0L,
                            LastName = "Moore"
                        },
                        new
                        {
                            Id = 6,
                            ConcurrencyToken = "ed4ddc84-cdb6-42d3-a4fb-ef3c24a1e2e4",
                            DepartmentId = 6,
                            FirstName = "Bruce",
                            IsDeveloper = true,
                            LastModifiedTime = 0L,
                            LastName = "Wayne"
                        });
                });

            modelBuilder.Entity("WiredBrainCoffee.EmployeeManager.Infrastructure.Entities.EmployeeEntity", b =>
                {
                    b.HasOne("WiredBrainCoffee.EmployeeManager.Infrastructure.Entities.DepartmentEntity", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("WiredBrainCoffee.EmployeeManager.Infrastructure.Entities.DepartmentEntity", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
