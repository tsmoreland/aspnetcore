// <auto-generated />
using MicroShop.Services.Coupons.CouponApiApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MicroShop.Services.Coupons.CouponApiApp.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MicroShop.Services.Coupons.CouponApiApp.Models.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<int>("MinimumAmount")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedCode");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "10OFF",
                            DiscountAmount = 10.0,
                            MinimumAmount = 20,
                            NormalizedCode = "10OFF"
                        },
                        new
                        {
                            Id = 2,
                            Code = "20OFF",
                            DiscountAmount = 20.0,
                            MinimumAmount = 40,
                            NormalizedCode = "20OFF"
                        },
                        new
                        {
                            Id = 3,
                            Code = "25OFF",
                            DiscountAmount = 25.0,
                            MinimumAmount = 50,
                            NormalizedCode = "25OFF"
                        },
                        new
                        {
                            Id = 4,
                            Code = "50OFF",
                            DiscountAmount = 50.0,
                            MinimumAmount = 100,
                            NormalizedCode = "50OFF"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
